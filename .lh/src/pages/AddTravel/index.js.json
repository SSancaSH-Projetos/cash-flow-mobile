{
    "sourceFile": "src/pages/AddTravel/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1711366751587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711366757589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n \r\n const initialTravelData = {\r\n     startDate: '1',\r\n-    finalDate: '1',\r\n+    endDate: '',\r\n     origin: '',\r\n     destination: '',\r\n     description: ''\r\n };\r\n"
                },
                {
                    "date": 1711366776368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { useState } from 'react';\r\n+import { TextInput, View, Text, TouchableOpacity } from 'react-native';\r\n+import { useNavigation } from '@react-navigation/native';\r\n+import Styles from './Style';\r\n+import Header from './../../components/Header';\r\n+import DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n+import { AddTravelMethod } from '../../service/TravelService'; \r\n+\r\n+\r\n+const initialTravelData = {\r\n+    startDate: '',\r\n+    endDate: '',\r\n+    origin: '',\r\n+    destination: '',\r\n+    description: ''\r\n+};\r\n+\r\n+export default function AddTravel() {\r\n+    const currentDate = new Date();\r\n+    const navigation = useNavigation();\r\n+    const [travelData, setTravelData] = useState(initialTravelData);\r\n+    const [alertEmptyInput, setAlertEmptyInput] = useState('');\r\n+    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n+    const [selectedDateField, setSelectedDateField] = useState('');\r\n+\r\n+    const adicionarViagem = () => {\r\n+        if (validateTravelData()) {\r\n+            setAlertEmptyInput('');\r\n+            const success = AddTravelMethod(travelData);\r\n+            if (success) {\r\n+                navigation.navigate('TravelList');\r\n+            } else {\r\n+                setAlertEmptyInput('Erro ao adicionar a viagem');\r\n+            }\r\n+        } else {\r\n+            setAlertEmptyInput('Todos os Campos devem ser Preenchidos');\r\n+        }\r\n+    }\r\n+\r\n+    const validateTravelData = () => {\r\n+        const { startDate, finalDate, origin, destination, description } = travelData;\r\n+        if (\r\n+            startDate.trim() === '' ||\r\n+            finalDate.trim() === '' ||\r\n+            origin.trim() === '' ||\r\n+            destination.trim() === '' ||\r\n+            description.trim() === ''\r\n+        ) {\r\n+            return false;\r\n+        }\r\n+        return true;\r\n+    }\r\n+\r\n+    const handleDateConfirm = (date) => {\r\n+        const formattedDate = date.toLocaleDateString('pt-BR'); \r\n+        setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n+        hideDatePicker();\r\n+    };\r\n+\r\n+    const showDatePicker = (field) => {\r\n+        setSelectedDateField(field);\r\n+        setDatePickerVisibility(true);\r\n+    };\r\n+\r\n+    const hideDatePicker = () => {\r\n+        setDatePickerVisibility(false);\r\n+    };\r\n+\r\n+    return (\r\n+        <View style={Styles.container}>\r\n+            <Header />\r\n+            <View style={Styles.content}>\r\n+                <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n+                <View style={Styles.boxDate}>\r\n+                    <TouchableOpacity\r\n+                        onPress={() => showDatePicker('initDate')}\r\n+                        style={Styles.date}\r\n+                    >\r\n+                        <Text>{travelData.initDate || \"Data de Inicio\"}</Text>\r\n+                    </TouchableOpacity>\r\n+                    <TouchableOpacity\r\n+                        onPress={() => showDatePicker('finalDate')}\r\n+                        style={Styles.date}\r\n+                    >\r\n+                        <Text>{travelData.finalDate || \"Data de Fim\"}</Text>\r\n+                    </TouchableOpacity>\r\n+                    \r\n+                    <DateTimePickerModal\r\n+                        isVisible={isDatePickerVisible}\r\n+                        mode=\"date\"\r\n+                        minimumDate={currentDate}\r\n+                        onConfirm={handleDateConfirm}\r\n+                        onCancel={hideDatePicker}\r\n+                    />\r\n+                </View>\r\n+                <TextInput\r\n+                    style={Styles.address}\r\n+                    placeholderTextColor={'gray'}\r\n+                    placeholder=\"Local de Origem\"\r\n+                    value={travelData.origin}\r\n+                    onChangeText={text => setTravelData({ ...travelData, origin: text })}\r\n+                />\r\n+                <TextInput\r\n+                    style={Styles.address}\r\n+                    placeholderTextColor={'gray'}\r\n+                    placeholder=\"Local de Destino\"\r\n+                    value={travelData.destination}\r\n+                    onChangeText={text => setTravelData({ ...travelData, destination: text })}\r\n+                />\r\n+                <TextInput\r\n+                    style={Styles.description}\r\n+                    placeholderTextColor={'gray'}\r\n+                    multiline={true}\r\n+                    placeholder=\"Descrição\"\r\n+                    value={travelData.description}\r\n+                    onChangeText={text => setTravelData({ ...travelData, description: text })}\r\n+                />\r\n+                <Text style={Styles.alert}>{alertEmptyInput}</Text>\r\n+                <TouchableOpacity style={Styles.areaBottom} onPress={adicionarViagem}>\r\n+                    <Text style={Styles.textBottom}>ADICIONAR</Text>\r\n+                </TouchableOpacity>\r\n+            </View>\r\n+        </View>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1711366800031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,12 +72,12 @@\n             <View style={Styles.content}>\r\n                 <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n                 <View style={Styles.boxDate}>\r\n                     <TouchableOpacity\r\n-                        onPress={() => showDatePicker('initDate')}\r\n+                        onPress={() => showDatePicker('startDate')}\r\n                         style={Styles.date}\r\n                     >\r\n-                        <Text>{travelData.initDate || \"Data de Inicio\"}</Text>\r\n+                        <Text>{travelData.startDate || \"Data de Inicio\"}</Text>\r\n                     </TouchableOpacity>\r\n                     <TouchableOpacity\r\n                         onPress={() => showDatePicker('finalDate')}\r\n                         style={Styles.date}\r\n@@ -122,129 +122,4 @@\n             </View>\r\n         </View>\r\n     );\r\n }\r\n-import React, { useState } from 'react';\r\n-import { TextInput, View, Text, TouchableOpacity } from 'react-native';\r\n-import { useNavigation } from '@react-navigation/native';\r\n-import Styles from './Style';\r\n-import Header from './../../components/Header';\r\n-import DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n-import { AddTravelMethod } from '../../service/TravelService'; \r\n-\r\n-\r\n-const initialTravelData = {\r\n-    startDate: '1',\r\n-    endDate: '',\r\n-    origin: '',\r\n-    destination: '',\r\n-    description: ''\r\n-};\r\n-\r\n-export default function AddTravel() {\r\n-    const currentDate = new Date();\r\n-    const navigation = useNavigation();\r\n-    const [travelData, setTravelData] = useState(initialTravelData);\r\n-    const [alertEmptyInput, setAlertEmptyInput] = useState('');\r\n-    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n-    const [selectedDateField, setSelectedDateField] = useState('');\r\n-\r\n-    const adicionarViagem = () => {\r\n-        if (validateTravelData()) {\r\n-            setAlertEmptyInput('');\r\n-            const success = AddTravelMethod(travelData);\r\n-            if (success) {\r\n-                navigation.navigate('TravelList');\r\n-            } else {\r\n-                setAlertEmptyInput('Erro ao adicionar a viagem');\r\n-            }\r\n-        } else {\r\n-            setAlertEmptyInput('Todos os Campos devem ser Preenchidos');\r\n-        }\r\n-    }\r\n-\r\n-    const validateTravelData = () => {\r\n-        const { initDate, finalDate, origin, destination, description } = travelData;\r\n-        if (\r\n-            initDate.trim() === '' ||\r\n-            finalDate.trim() === '' ||\r\n-            origin.trim() === '' ||\r\n-            destination.trim() === '' ||\r\n-            description.trim() === ''\r\n-        ) {\r\n-            return false;\r\n-        }\r\n-        return true;\r\n-    }\r\n-\r\n-    const handleDateConfirm = (date) => {\r\n-        const formattedDate = date.toLocaleDateString('pt-BR'); \r\n-        setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n-        hideDatePicker();\r\n-    };\r\n-\r\n-    const showDatePicker = (field) => {\r\n-        setSelectedDateField(field);\r\n-        setDatePickerVisibility(true);\r\n-    };\r\n-\r\n-    const hideDatePicker = () => {\r\n-        setDatePickerVisibility(false);\r\n-    };\r\n-\r\n-    return (\r\n-        <View style={Styles.container}>\r\n-            <Header />\r\n-            <View style={Styles.content}>\r\n-                <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n-                <View style={Styles.boxDate}>\r\n-                    <TouchableOpacity\r\n-                        onPress={() => showDatePicker('initDate')}\r\n-                        style={Styles.date}\r\n-                    >\r\n-                        <Text>{travelData.initDate || \"Data de Inicio\"}</Text>\r\n-                    </TouchableOpacity>\r\n-                    <TouchableOpacity\r\n-                        onPress={() => showDatePicker('finalDate')}\r\n-                        style={Styles.date}\r\n-                    >\r\n-                        <Text>{travelData.finalDate || \"Data de Fim\"}</Text>\r\n-                    </TouchableOpacity>\r\n-                    \r\n-                    <DateTimePickerModal\r\n-                        isVisible={isDatePickerVisible}\r\n-                        mode=\"date\"\r\n-                        minimumDate={currentDate}\r\n-                        onConfirm={handleDateConfirm}\r\n-                        onCancel={hideDatePicker}\r\n-                    />\r\n-                </View>\r\n-                <TextInput\r\n-                    style={Styles.address}\r\n-                    placeholderTextColor={'gray'}\r\n-                    placeholder=\"Local de Origem\"\r\n-                    value={travelData.origin}\r\n-                    onChangeText={text => setTravelData({ ...travelData, origin: text })}\r\n-                />\r\n-                <TextInput\r\n-                    style={Styles.address}\r\n-                    placeholderTextColor={'gray'}\r\n-                    placeholder=\"Local de Destino\"\r\n-                    value={travelData.destination}\r\n-                    onChangeText={text => setTravelData({ ...travelData, destination: text })}\r\n-                />\r\n-                <TextInput\r\n-                    style={Styles.description}\r\n-                    placeholderTextColor={'gray'}\r\n-                    multiline={true}\r\n-                    placeholder=\"Descrição\"\r\n-                    value={travelData.description}\r\n-                    onChangeText={text => setTravelData({ ...travelData, description: text })}\r\n-                />\r\n-                <Text style={Styles.alert}>{alertEmptyInput}</Text>\r\n-                <TouchableOpacity style={Styles.areaBottom} onPress={adicionarViagem}>\r\n-                    <Text style={Styles.textBottom}>ADICIONAR</Text>\r\n-                </TouchableOpacity>\r\n-            </View>\r\n-        </View>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1711366831408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,12 +37,12 @@\n         }\r\n     }\r\n \r\n     const validateTravelData = () => {\r\n-        const { startDate, finalDate, origin, destination, description } = travelData;\r\n+        const { startDate, endDate, origin, destination, description } = travelData;\r\n         if (\r\n             startDate.trim() === '' ||\r\n-            finalDate.trim() === '' ||\r\n+            endDate.trim() === '' ||\r\n             origin.trim() === '' ||\r\n             destination.trim() === '' ||\r\n             description.trim() === ''\r\n         ) {\r\n"
                },
                {
                    "date": 1711366836794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,12 +78,12 @@\n                     >\r\n                         <Text>{travelData.startDate || \"Data de Inicio\"}</Text>\r\n                     </TouchableOpacity>\r\n                     <TouchableOpacity\r\n-                        onPress={() => showDatePicker('finalDate')}\r\n+                        onPress={() => showDatePicker('endDate')}\r\n                         style={Styles.date}\r\n                     >\r\n-                        <Text>{travelData.finalDate || \"Data de Fim\"}</Text>\r\n+                        <Text>{travelData.endDate || \"Data de Fim\"}</Text>\r\n                     </TouchableOpacity>\r\n                     \r\n                     <DateTimePickerModal\r\n                         isVisible={isDatePickerVisible}\r\n"
                },
                {
                    "date": 1711367039177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { useState } from 'react';\r\n+import { TextInput, View, Text, TouchableOpacity } from 'react-native';\r\n+import { useNavigation } from '@react-navigation/native';\r\n+import Styles from './Style';\r\n+import Header from './../../components/Header';\r\n+import DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n+import { AddTravelMethod } from '../../service/TravelService'; \r\n+\r\n+\r\n+const initialTravelData = {\r\n+    startDate: '',\r\n+    endDate: '',\r\n+    origin: '',\r\n+    destination: '',\r\n+    description: ''\r\n+};\r\n+\r\n+export default function AddTravel() {\r\n+    const currentDate = new Date();\r\n+    const navigation = useNavigation();\r\n+    const [travelData, setTravelData] = useState(initialTravelData);\r\n+    const [alertEmptyInput, setAlertEmptyInput] = useState('');\r\n+    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n+    const [selectedDateField, setSelectedDateField] = useState('');\r\n+\r\n+    const adicionarViagem = () => {\r\n+        if (validateTravelData()) {\r\n+            setAlertEmptyInput('');\r\n+            const success = AddTravelMethod(travelData);\r\n+            if (success) {\r\n+                navigation.navigate('TravelList');\r\n+            } else {\r\n+                setAlertEmptyInput('Erro ao adicionar a viagem');\r\n+            }\r\n+        } else {\r\n+            setAlertEmptyInput('Todos os Campos devem ser Preenchidos');\r\n+        }\r\n+    }\r\n+\r\n+    const validateTravelData = () => {\r\n+        const { startDate, endDate, origin, destination, description } = travelData;\r\n+        if (\r\n+            startDate.trim() === '' ||\r\n+            endDate.trim() === '' ||\r\n+            origin.trim() === '' ||\r\n+            destination.trim() === '' ||\r\n+            description.trim() === ''\r\n+        ) {\r\n+            return false;\r\n+        }\r\n+        return true;\r\n+    }\r\n+\r\n+    const handleDateConfirm = (date) => {\r\n+        const formattedDate = date.toLocaleDateString(''); \r\n+        setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n+        hideDatePicker();\r\n+    };\r\n+\r\n+    const showDatePicker = (field) => {\r\n+        setSelectedDateField(field);\r\n+        setDatePickerVisibility(true);\r\n+    };\r\n+\r\n+    const hideDatePicker = () => {\r\n+        setDatePickerVisibility(false);\r\n+    };\r\n+\r\n+    return (\r\n+        <View style={Styles.container}>\r\n+            <Header />\r\n+            <View style={Styles.content}>\r\n+                <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n+                <View style={Styles.boxDate}>\r\n+                    <TouchableOpacity\r\n+                        onPress={() => showDatePicker('startDate')}\r\n+                        style={Styles.date}\r\n+                    >\r\n+                        <Text>{travelData.startDate || \"Data de Inicio\"}</Text>\r\n+                    </TouchableOpacity>\r\n+                    <TouchableOpacity\r\n+                        onPress={() => showDatePicker('endDate')}\r\n+                        style={Styles.date}\r\n+                    >\r\n+                        <Text>{travelData.endDate || \"Data de Fim\"}</Text>\r\n+                    </TouchableOpacity>\r\n+                    \r\n+                    <DateTimePickerModal\r\n+                        isVisible={isDatePickerVisible}\r\n+                        mode=\"date\"\r\n+                        minimumDate={currentDate}\r\n+                        onConfirm={handleDateConfirm}\r\n+                        onCancel={hideDatePicker}\r\n+                    />\r\n+                </View>\r\n+                <TextInput\r\n+                    style={Styles.address}\r\n+                    placeholderTextColor={'gray'}\r\n+                    placeholder=\"Local de Origem\"\r\n+                    value={travelData.origin}\r\n+                    onChangeText={text => setTravelData({ ...travelData, origin: text })}\r\n+                />\r\n+                <TextInput\r\n+                    style={Styles.address}\r\n+                    placeholderTextColor={'gray'}\r\n+                    placeholder=\"Local de Destino\"\r\n+                    value={travelData.destination}\r\n+                    onChangeText={text => setTravelData({ ...travelData, destination: text })}\r\n+                />\r\n+                <TextInput\r\n+                    style={Styles.description}\r\n+                    placeholderTextColor={'gray'}\r\n+                    multiline={true}\r\n+                    placeholder=\"Descrição\"\r\n+                    value={travelData.description}\r\n+                    onChangeText={text => setTravelData({ ...travelData, description: text })}\r\n+                />\r\n+                <Text style={Styles.alert}>{alertEmptyInput}</Text>\r\n+                <TouchableOpacity style={Styles.areaBottom} onPress={adicionarViagem}>\r\n+                    <Text style={Styles.textBottom}>ADICIONAR</Text>\r\n+                </TouchableOpacity>\r\n+            </View>\r\n+        </View>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1711367047353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { useState } from 'react';\r\n+import { TextInput, View, Text, TouchableOpacity } from 'react-native';\r\n+import { useNavigation } from '@react-navigation/native';\r\n+import Styles from './Style';\r\n+import Header from './../../components/Header';\r\n+import DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n+import { AddTravelMethod } from '../../service/TravelService'; \r\n+\r\n+\r\n+const initialTravelData = {\r\n+    startDate: '',\r\n+    endDate: '',\r\n+    origin: '',\r\n+    destination: '',\r\n+    description: ''\r\n+};\r\n+\r\n+export default function AddTravel() {\r\n+    const currentDate = new Date();\r\n+    const navigation = useNavigation();\r\n+    const [travelData, setTravelData] = useState(initialTravelData);\r\n+    const [alertEmptyInput, setAlertEmptyInput] = useState('');\r\n+    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n+    const [selectedDateField, setSelectedDateField] = useState('');\r\n+\r\n+    const adicionarViagem = () => {\r\n+        if (validateTravelData()) {\r\n+            setAlertEmptyInput('');\r\n+            const success = AddTravelMethod(travelData);\r\n+            if (success) {\r\n+                navigation.navigate('TravelList');\r\n+            } else {\r\n+                setAlertEmptyInput('Erro ao adicionar a viagem');\r\n+            }\r\n+        } else {\r\n+            setAlertEmptyInput('Todos os Campos devem ser Preenchidos');\r\n+        }\r\n+    }\r\n+\r\n+    const validateTravelData = () => {\r\n+        const { startDate, endDate, origin, destination, description } = travelData;\r\n+        if (\r\n+            startDate.trim() === '' ||\r\n+            endDate.trim() === '' ||\r\n+            origin.trim() === '' ||\r\n+            destination.trim() === '' ||\r\n+            description.trim() === ''\r\n+        ) {\r\n+            return false;\r\n+        }\r\n+        return true;\r\n+    }\r\n+\r\n+    const handleDateConfirm = (date) => {\r\n+        const formattedDate = date.toLocaleDateString('p'); \r\n+        setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n+        hideDatePicker();\r\n+    };\r\n+\r\n+    const showDatePicker = (field) => {\r\n+        setSelectedDateField(field);\r\n+        setDatePickerVisibility(true);\r\n+    };\r\n+\r\n+    const hideDatePicker = () => {\r\n+        setDatePickerVisibility(false);\r\n+    };\r\n+\r\n+    return (\r\n+        <View style={Styles.container}>\r\n+            <Header />\r\n+            <View style={Styles.content}>\r\n+                <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n+                <View style={Styles.boxDate}>\r\n+                    <TouchableOpacity\r\n+                        onPress={() => showDatePicker('startDate')}\r\n+                        style={Styles.date}\r\n+                    >\r\n+                        <Text>{travelData.startDate || \"Data de Inicio\"}</Text>\r\n+                    </TouchableOpacity>\r\n+                    <TouchableOpacity\r\n+                        onPress={() => showDatePicker('endDate')}\r\n+                        style={Styles.date}\r\n+                    >\r\n+                        <Text>{travelData.endDate || \"Data de Fim\"}</Text>\r\n+                    </TouchableOpacity>\r\n+                    \r\n+                    <DateTimePickerModal\r\n+                        isVisible={isDatePickerVisible}\r\n+                        mode=\"date\"\r\n+                        minimumDate={currentDate}\r\n+                        onConfirm={handleDateConfirm}\r\n+                        onCancel={hideDatePicker}\r\n+                    />\r\n+                </View>\r\n+                <TextInput\r\n+                    style={Styles.address}\r\n+                    placeholderTextColor={'gray'}\r\n+                    placeholder=\"Local de Origem\"\r\n+                    value={travelData.origin}\r\n+                    onChangeText={text => setTravelData({ ...travelData, origin: text })}\r\n+                />\r\n+                <TextInput\r\n+                    style={Styles.address}\r\n+                    placeholderTextColor={'gray'}\r\n+                    placeholder=\"Local de Destino\"\r\n+                    value={travelData.destination}\r\n+                    onChangeText={text => setTravelData({ ...travelData, destination: text })}\r\n+                />\r\n+                <TextInput\r\n+                    style={Styles.description}\r\n+                    placeholderTextColor={'gray'}\r\n+                    multiline={true}\r\n+                    placeholder=\"Descrição\"\r\n+                    value={travelData.description}\r\n+                    onChangeText={text => setTravelData({ ...travelData, description: text })}\r\n+                />\r\n+                <Text style={Styles.alert}>{alertEmptyInput}</Text>\r\n+                <TouchableOpacity style={Styles.areaBottom} onPress={adicionarViagem}>\r\n+                    <Text style={Styles.textBottom}>ADICIONAR</Text>\r\n+                </TouchableOpacity>\r\n+            </View>\r\n+        </View>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1711367056678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n         return true;\r\n     }\r\n \r\n     const handleDateConfirm = (date) => {\r\n-        const formattedDate = date.toLocaleDateString('p'); \r\n+        //const formattedDate = date.toLocaleDateString('pt-BR'); \r\n         setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n         hideDatePicker();\r\n     };\r\n \r\n@@ -122,254 +122,4 @@\n             </View>\r\n         </View>\r\n     );\r\n }\r\n-import React, { useState } from 'react';\r\n-import { TextInput, View, Text, TouchableOpacity } from 'react-native';\r\n-import { useNavigation } from '@react-navigation/native';\r\n-import Styles from './Style';\r\n-import Header from './../../components/Header';\r\n-import DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n-import { AddTravelMethod } from '../../service/TravelService'; \r\n-\r\n-\r\n-const initialTravelData = {\r\n-    startDate: '',\r\n-    endDate: '',\r\n-    origin: '',\r\n-    destination: '',\r\n-    description: ''\r\n-};\r\n-\r\n-export default function AddTravel() {\r\n-    const currentDate = new Date();\r\n-    const navigation = useNavigation();\r\n-    const [travelData, setTravelData] = useState(initialTravelData);\r\n-    const [alertEmptyInput, setAlertEmptyInput] = useState('');\r\n-    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n-    const [selectedDateField, setSelectedDateField] = useState('');\r\n-\r\n-    const adicionarViagem = () => {\r\n-        if (validateTravelData()) {\r\n-            setAlertEmptyInput('');\r\n-            const success = AddTravelMethod(travelData);\r\n-            if (success) {\r\n-                navigation.navigate('TravelList');\r\n-            } else {\r\n-                setAlertEmptyInput('Erro ao adicionar a viagem');\r\n-            }\r\n-        } else {\r\n-            setAlertEmptyInput('Todos os Campos devem ser Preenchidos');\r\n-        }\r\n-    }\r\n-\r\n-    const validateTravelData = () => {\r\n-        const { startDate, endDate, origin, destination, description } = travelData;\r\n-        if (\r\n-            startDate.trim() === '' ||\r\n-            endDate.trim() === '' ||\r\n-            origin.trim() === '' ||\r\n-            destination.trim() === '' ||\r\n-            description.trim() === ''\r\n-        ) {\r\n-            return false;\r\n-        }\r\n-        return true;\r\n-    }\r\n-\r\n-    const handleDateConfirm = (date) => {\r\n-        const formattedDate = date.toLocaleDateString(''); \r\n-        setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n-        hideDatePicker();\r\n-    };\r\n-\r\n-    const showDatePicker = (field) => {\r\n-        setSelectedDateField(field);\r\n-        setDatePickerVisibility(true);\r\n-    };\r\n-\r\n-    const hideDatePicker = () => {\r\n-        setDatePickerVisibility(false);\r\n-    };\r\n-\r\n-    return (\r\n-        <View style={Styles.container}>\r\n-            <Header />\r\n-            <View style={Styles.content}>\r\n-                <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n-                <View style={Styles.boxDate}>\r\n-                    <TouchableOpacity\r\n-                        onPress={() => showDatePicker('startDate')}\r\n-                        style={Styles.date}\r\n-                    >\r\n-                        <Text>{travelData.startDate || \"Data de Inicio\"}</Text>\r\n-                    </TouchableOpacity>\r\n-                    <TouchableOpacity\r\n-                        onPress={() => showDatePicker('endDate')}\r\n-                        style={Styles.date}\r\n-                    >\r\n-                        <Text>{travelData.endDate || \"Data de Fim\"}</Text>\r\n-                    </TouchableOpacity>\r\n-                    \r\n-                    <DateTimePickerModal\r\n-                        isVisible={isDatePickerVisible}\r\n-                        mode=\"date\"\r\n-                        minimumDate={currentDate}\r\n-                        onConfirm={handleDateConfirm}\r\n-                        onCancel={hideDatePicker}\r\n-                    />\r\n-                </View>\r\n-                <TextInput\r\n-                    style={Styles.address}\r\n-                    placeholderTextColor={'gray'}\r\n-                    placeholder=\"Local de Origem\"\r\n-                    value={travelData.origin}\r\n-                    onChangeText={text => setTravelData({ ...travelData, origin: text })}\r\n-                />\r\n-                <TextInput\r\n-                    style={Styles.address}\r\n-                    placeholderTextColor={'gray'}\r\n-                    placeholder=\"Local de Destino\"\r\n-                    value={travelData.destination}\r\n-                    onChangeText={text => setTravelData({ ...travelData, destination: text })}\r\n-                />\r\n-                <TextInput\r\n-                    style={Styles.description}\r\n-                    placeholderTextColor={'gray'}\r\n-                    multiline={true}\r\n-                    placeholder=\"Descrição\"\r\n-                    value={travelData.description}\r\n-                    onChangeText={text => setTravelData({ ...travelData, description: text })}\r\n-                />\r\n-                <Text style={Styles.alert}>{alertEmptyInput}</Text>\r\n-                <TouchableOpacity style={Styles.areaBottom} onPress={adicionarViagem}>\r\n-                    <Text style={Styles.textBottom}>ADICIONAR</Text>\r\n-                </TouchableOpacity>\r\n-            </View>\r\n-        </View>\r\n-    );\r\n-}\r\n-import React, { useState } from 'react';\r\n-import { TextInput, View, Text, TouchableOpacity } from 'react-native';\r\n-import { useNavigation } from '@react-navigation/native';\r\n-import Styles from './Style';\r\n-import Header from './../../components/Header';\r\n-import DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n-import { AddTravelMethod } from '../../service/TravelService'; \r\n-\r\n-\r\n-const initialTravelData = {\r\n-    startDate: '',\r\n-    endDate: '',\r\n-    origin: '',\r\n-    destination: '',\r\n-    description: ''\r\n-};\r\n-\r\n-export default function AddTravel() {\r\n-    const currentDate = new Date();\r\n-    const navigation = useNavigation();\r\n-    const [travelData, setTravelData] = useState(initialTravelData);\r\n-    const [alertEmptyInput, setAlertEmptyInput] = useState('');\r\n-    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n-    const [selectedDateField, setSelectedDateField] = useState('');\r\n-\r\n-    const adicionarViagem = () => {\r\n-        if (validateTravelData()) {\r\n-            setAlertEmptyInput('');\r\n-            const success = AddTravelMethod(travelData);\r\n-            if (success) {\r\n-                navigation.navigate('TravelList');\r\n-            } else {\r\n-                setAlertEmptyInput('Erro ao adicionar a viagem');\r\n-            }\r\n-        } else {\r\n-            setAlertEmptyInput('Todos os Campos devem ser Preenchidos');\r\n-        }\r\n-    }\r\n-\r\n-    const validateTravelData = () => {\r\n-        const { startDate, endDate, origin, destination, description } = travelData;\r\n-        if (\r\n-            startDate.trim() === '' ||\r\n-            endDate.trim() === '' ||\r\n-            origin.trim() === '' ||\r\n-            destination.trim() === '' ||\r\n-            description.trim() === ''\r\n-        ) {\r\n-            return false;\r\n-        }\r\n-        return true;\r\n-    }\r\n-\r\n-    const handleDateConfirm = (date) => {\r\n-        const formattedDate = date.toLocaleDateString('pt-BR'); \r\n-        setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n-        hideDatePicker();\r\n-    };\r\n-\r\n-    const showDatePicker = (field) => {\r\n-        setSelectedDateField(field);\r\n-        setDatePickerVisibility(true);\r\n-    };\r\n-\r\n-    const hideDatePicker = () => {\r\n-        setDatePickerVisibility(false);\r\n-    };\r\n-\r\n-    return (\r\n-        <View style={Styles.container}>\r\n-            <Header />\r\n-            <View style={Styles.content}>\r\n-                <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n-                <View style={Styles.boxDate}>\r\n-                    <TouchableOpacity\r\n-                        onPress={() => showDatePicker('startDate')}\r\n-                        style={Styles.date}\r\n-                    >\r\n-                        <Text>{travelData.startDate || \"Data de Inicio\"}</Text>\r\n-                    </TouchableOpacity>\r\n-                    <TouchableOpacity\r\n-                        onPress={() => showDatePicker('endDate')}\r\n-                        style={Styles.date}\r\n-                    >\r\n-                        <Text>{travelData.endDate || \"Data de Fim\"}</Text>\r\n-                    </TouchableOpacity>\r\n-                    \r\n-                    <DateTimePickerModal\r\n-                        isVisible={isDatePickerVisible}\r\n-                        mode=\"date\"\r\n-                        minimumDate={currentDate}\r\n-                        onConfirm={handleDateConfirm}\r\n-                        onCancel={hideDatePicker}\r\n-                    />\r\n-                </View>\r\n-                <TextInput\r\n-                    style={Styles.address}\r\n-                    placeholderTextColor={'gray'}\r\n-                    placeholder=\"Local de Origem\"\r\n-                    value={travelData.origin}\r\n-                    onChangeText={text => setTravelData({ ...travelData, origin: text })}\r\n-                />\r\n-                <TextInput\r\n-                    style={Styles.address}\r\n-                    placeholderTextColor={'gray'}\r\n-                    placeholder=\"Local de Destino\"\r\n-                    value={travelData.destination}\r\n-                    onChangeText={text => setTravelData({ ...travelData, destination: text })}\r\n-                />\r\n-                <TextInput\r\n-                    style={Styles.description}\r\n-                    placeholderTextColor={'gray'}\r\n-                    multiline={true}\r\n-                    placeholder=\"Descrição\"\r\n-                    value={travelData.description}\r\n-                    onChangeText={text => setTravelData({ ...travelData, description: text })}\r\n-                />\r\n-                <Text style={Styles.alert}>{alertEmptyInput}</Text>\r\n-                <TouchableOpacity style={Styles.areaBottom} onPress={adicionarViagem}>\r\n-                    <Text style={Styles.textBottom}>ADICIONAR</Text>\r\n-                </TouchableOpacity>\r\n-            </View>\r\n-        </View>\r\n-    );\r\n-}\r\n"
                },
                {
                    "date": 1711367076609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import React, { useState } from 'react';\r\n+import { TextInput, View, Text, TouchableOpacity } from 'react-native';\r\n+import { useNavigation } from '@react-navigation/native';\r\n+import Styles from './Style';\r\n+import Header from './../../components/Header';\r\n+import DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\n+import { AddTravelMethod } from '../../service/TravelService'; \r\n+\r\n+\r\n+const initialTravelData = {\r\n+    startDate: '',\r\n+    endDate: '',\r\n+    origin: '',\r\n+    destination: '',\r\n+    description: ''\r\n+};\r\n+\r\n+export default function AddTravel() {\r\n+    const currentDate = new Date();\r\n+    const navigation = useNavigation();\r\n+    const [travelData, setTravelData] = useState(initialTravelData);\r\n+    const [alertEmptyInput, setAlertEmptyInput] = useState('');\r\n+    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n+    const [selectedDateField, setSelectedDateField] = useState('');\r\n+\r\n+    const adicionarViagem = () => {\r\n+        if (validateTravelData()) {\r\n+            setAlertEmptyInput('');\r\n+            const success = AddTravelMethod(travelData);\r\n+            if (success) {\r\n+                navigation.navigate('TravelList');\r\n+            } else {\r\n+                setAlertEmptyInput('Erro ao adicionar a viagem');\r\n+            }\r\n+        } else {\r\n+            setAlertEmptyInput('Todos os Campos devem ser Preenchidos');\r\n+        }\r\n+    }\r\n+\r\n+    const validateTravelData = () => {\r\n+        const { startDate, endDate, origin, destination, description } = travelData;\r\n+        if (\r\n+            startDate.trim() === '' ||\r\n+            endDate.trim() === '' ||\r\n+            origin.trim() === '' ||\r\n+            destination.trim() === '' ||\r\n+            description.trim() === ''\r\n+        ) {\r\n+            return false;\r\n+        }\r\n+        return true;\r\n+    }\r\n+\r\n+    const handleDateConfirm = (date) => {\r\n+        const formattedDate = date.toLocaleDateString('pt-BR'); \r\n+        setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n+        hideDatePicker();\r\n+    };\r\n+\r\n+    const showDatePicker = (field) => {\r\n+        setSelectedDateField(field);\r\n+        setDatePickerVisibility(true);\r\n+    };\r\n+\r\n+    const hideDatePicker = () => {\r\n+        setDatePickerVisibility(false);\r\n+    };\r\n+\r\n+    return (\r\n+        <View style={Styles.container}>\r\n+            <Header />\r\n+            <View style={Styles.content}>\r\n+                <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n+                <View style={Styles.boxDate}>\r\n+                    <TouchableOpacity\r\n+                        onPress={() => showDatePicker('startDate')}\r\n+                        style={Styles.date}\r\n+                    >\r\n+                        <Text>{travelData.startDate || \"Data de Inicio\"}</Text>\r\n+                    </TouchableOpacity>\r\n+                    <TouchableOpacity\r\n+                        onPress={() => showDatePicker('endDate')}\r\n+                        style={Styles.date}\r\n+                    >\r\n+                        <Text>{travelData.endDate || \"Data de Fim\"}</Text>\r\n+                    </TouchableOpacity>\r\n+                    \r\n+                    <DateTimePickerModal\r\n+                        isVisible={isDatePickerVisible}\r\n+                        mode=\"date\"\r\n+                        minimumDate={currentDate}\r\n+                        onConfirm={handleDateConfirm}\r\n+                        onCancel={hideDatePicker}\r\n+                    />\r\n+                </View>\r\n+                <TextInput\r\n+                    style={Styles.address}\r\n+                    placeholderTextColor={'gray'}\r\n+                    placeholder=\"Local de Origem\"\r\n+                    value={travelData.origin}\r\n+                    onChangeText={text => setTravelData({ ...travelData, origin: text })}\r\n+                />\r\n+                <TextInput\r\n+                    style={Styles.address}\r\n+                    placeholderTextColor={'gray'}\r\n+                    placeholder=\"Local de Destino\"\r\n+                    value={travelData.destination}\r\n+                    onChangeText={text => setTravelData({ ...travelData, destination: text })}\r\n+                />\r\n+                <TextInput\r\n+                    style={Styles.description}\r\n+                    placeholderTextColor={'gray'}\r\n+                    multiline={true}\r\n+                    placeholder=\"Descrição\"\r\n+                    value={travelData.description}\r\n+                    onChangeText={text => setTravelData({ ...travelData, description: text })}\r\n+                />\r\n+                <Text style={Styles.alert}>{alertEmptyInput}</Text>\r\n+                <TouchableOpacity style={Styles.areaBottom} onPress={adicionarViagem}>\r\n+                    <Text style={Styles.textBottom}>ADICIONAR</Text>\r\n+                </TouchableOpacity>\r\n+            </View>\r\n+        </View>\r\n+    );\r\n+}\r\n"
                },
                {
                    "date": 1711367120511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n         return true;\r\n     }\r\n \r\n     const handleDateConfirm = (date) => {\r\n-        const formattedDate = date;\r\n+        const formattedDate = date.;\r\n         setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n         hideDatePicker();\r\n     };\r\n \r\n"
                }
            ],
            "date": 1711366751587,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { TextInput, View, Text, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Styles from './Style';\r\nimport Header from './../../components/Header';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport { AddTravelMethod } from '../../service/TravelService'; \r\n\r\n\r\nconst initialTravelData = {\r\n    startDate: '1',\r\n    finalDate: '1',\r\n    origin: '',\r\n    destination: '',\r\n    description: ''\r\n};\r\n\r\nexport default function AddTravel() {\r\n    const currentDate = new Date();\r\n    const navigation = useNavigation();\r\n    const [travelData, setTravelData] = useState(initialTravelData);\r\n    const [alertEmptyInput, setAlertEmptyInput] = useState('');\r\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n    const [selectedDateField, setSelectedDateField] = useState('');\r\n\r\n    const adicionarViagem = () => {\r\n        if (validateTravelData()) {\r\n            setAlertEmptyInput('');\r\n            const success = AddTravelMethod(travelData);\r\n            if (success) {\r\n                navigation.navigate('TravelList');\r\n            } else {\r\n                setAlertEmptyInput('Erro ao adicionar a viagem');\r\n            }\r\n        } else {\r\n            setAlertEmptyInput('Todos os Campos devem ser Preenchidos');\r\n        }\r\n    }\r\n\r\n    const validateTravelData = () => {\r\n        const { initDate, finalDate, origin, destination, description } = travelData;\r\n        if (\r\n            initDate.trim() === '' ||\r\n            finalDate.trim() === '' ||\r\n            origin.trim() === '' ||\r\n            destination.trim() === '' ||\r\n            description.trim() === ''\r\n        ) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const handleDateConfirm = (date) => {\r\n        const formattedDate = date.toLocaleDateString('pt-BR'); \r\n        setTravelData({ ...travelData, [selectedDateField]: formattedDate });\r\n        hideDatePicker();\r\n    };\r\n\r\n    const showDatePicker = (field) => {\r\n        setSelectedDateField(field);\r\n        setDatePickerVisibility(true);\r\n    };\r\n\r\n    const hideDatePicker = () => {\r\n        setDatePickerVisibility(false);\r\n    };\r\n\r\n    return (\r\n        <View style={Styles.container}>\r\n            <Header />\r\n            <View style={Styles.content}>\r\n                <Text style={Styles.title}>Marque Sua Viagem!</Text>\r\n                <View style={Styles.boxDate}>\r\n                    <TouchableOpacity\r\n                        onPress={() => showDatePicker('initDate')}\r\n                        style={Styles.date}\r\n                    >\r\n                        <Text>{travelData.initDate || \"Data de Inicio\"}</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        onPress={() => showDatePicker('finalDate')}\r\n                        style={Styles.date}\r\n                    >\r\n                        <Text>{travelData.finalDate || \"Data de Fim\"}</Text>\r\n                    </TouchableOpacity>\r\n                    \r\n                    <DateTimePickerModal\r\n                        isVisible={isDatePickerVisible}\r\n                        mode=\"date\"\r\n                        minimumDate={currentDate}\r\n                        onConfirm={handleDateConfirm}\r\n                        onCancel={hideDatePicker}\r\n                    />\r\n                </View>\r\n                <TextInput\r\n                    style={Styles.address}\r\n                    placeholderTextColor={'gray'}\r\n                    placeholder=\"Local de Origem\"\r\n                    value={travelData.origin}\r\n                    onChangeText={text => setTravelData({ ...travelData, origin: text })}\r\n                />\r\n                <TextInput\r\n                    style={Styles.address}\r\n                    placeholderTextColor={'gray'}\r\n                    placeholder=\"Local de Destino\"\r\n                    value={travelData.destination}\r\n                    onChangeText={text => setTravelData({ ...travelData, destination: text })}\r\n                />\r\n                <TextInput\r\n                    style={Styles.description}\r\n                    placeholderTextColor={'gray'}\r\n                    multiline={true}\r\n                    placeholder=\"Descrição\"\r\n                    value={travelData.description}\r\n                    onChangeText={text => setTravelData({ ...travelData, description: text })}\r\n                />\r\n                <Text style={Styles.alert}>{alertEmptyInput}</Text>\r\n                <TouchableOpacity style={Styles.areaBottom} onPress={adicionarViagem}>\r\n                    <Text style={Styles.textBottom}>ADICIONAR</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n"
        }
    ]
}