{
    "sourceFile": "src/service/ExpensesService/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1711365837097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711372447806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,98 +1,107 @@\n-import travels from \"../TravelService\";\r\n-const url = process.env.EXPO_PUBLIC_API_URL;\r\n+const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n \r\n-\r\n export async function AddExpensesMethod({ description, category, value, invoice, id_travel }) {\r\n     const newExpenses = {\r\n-        id: generateId(),\r\n         description,\r\n         category,\r\n         value,\r\n         invoice,\r\n-        date: getdate(),\r\n+        date: getDate(),\r\n         hour: getHour(),\r\n         location: 'My PC',\r\n         travel: id_travel,\r\n-    }\r\n+    };\r\n \r\n-   \r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/expenses`, {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newExpenses)\r\n+        });\r\n \r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add expenses.');\r\n+        }\r\n \r\n-    const foundTravel = travels.find(travel => travel.id === id_travel);\r\n-    if (foundTravel) {\r\n-        console.log(newExpenses)\r\n-        foundTravel.expenses.push(newExpenses);\r\n+        console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', response.data);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding expenses:', error.message);\r\n+        return false;\r\n     }\r\n-\r\n-    console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', travels);\r\n-    await new Promise(res => setTimeout(res, 1000));\r\n-    return true;\r\n }\r\n \r\n+export async function FindExpensesMethod(id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/expenses/${id_expenses}`);\r\n \r\n-export async function FindExpensesMethod(id_expenses) {\r\n-    await new Promise(res => setTimeout(res, 1000));\r\n-    const foundExpenses = expenses.find(expenses => expenses.id === id_expenses);\r\n-    return foundExpenses || null;\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to find expenses.');\r\n+        }\r\n+\r\n+        return await response.json();\r\n+    } catch (error) {\r\n+        console.error('Error finding expenses:', error.message);\r\n+        return null;\r\n+    }\r\n }\r\n \r\n+export async function RemoveExpensesMethod(id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/expenses/${id_expenses}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n \r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove expenses.');\r\n+        }\r\n \r\n-export async function RemoveExpensesMethod(id_expenses, expenses) {\r\n-    await new Promise(res => setTimeout(res, 1000));\r\n-    const index = expenses.findIndex(expense => expense.id === id_expenses);\r\n-    if(index !== -1){\r\n-        expenses.splice(index, 1);\r\n         return true;\r\n+    } catch (error) {\r\n+        console.error('Error removing expenses:', error.message);\r\n+        return false;\r\n     }\r\n-    return false;\r\n }\r\n \r\n+export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n+    const updatedExpenses = {\r\n+        description,\r\n+        category,\r\n+        value,\r\n+        invoice,\r\n+        id_travel\r\n+    };\r\n \r\n-export async function UpdateExpenses({id_expenses , description , category , value, invoice, id_travel}) {\r\n-    await new Promise(res => setTimeout(res, 1000));\r\n-    if(\r\n-        id_expenses.trim() === '' ||\r\n-        description.trim() === '' ||\r\n-        category.trim() === '' ||\r\n-        value.trim() === '' ||\r\n-        invoice.trim() === '' ||\r\n-        id_travel.trim() === ''\r\n-    ) {\r\n-        return false;\r\n-    }\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/expenses/${id_expenses}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(updatedExpenses)\r\n+        });\r\n \r\n-    const index = expenses.findIndex(expenses => expenses.id === id_expenses);\r\n-    if(index !== -1){\r\n-        expenses[index] = {\r\n-            id: id_expenses,\r\n-            description,\r\n-            category,\r\n-            value,\r\n-            invoice,\r\n-            id_travel\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update expenses.');\r\n         }\r\n+\r\n         return true;\r\n+    } catch (error) {\r\n+        console.error('Error updating expenses:', error.message);\r\n+        return false;\r\n     }\r\n-\r\n-    return false;\r\n-\r\n-\r\n }\r\n \r\n-function generateId() {\r\n-    return '$' + Math.random().toString(36).substr(2, 9);\r\n-}\r\n-\r\n-function getdate() {\r\n-    var currentdate = new Date();\r\n-    var datetime = currentdate.getDay() + \"/\" + currentdate.getMonth() \r\n-    + \"/\" + currentdate.getFullYear();\r\n+function getDate() {\r\n+    const currentDate = new Date();\r\n+    const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n     return datetime;\r\n }\r\n \r\n function getHour() {\r\n-    var currenthour = new Date();\r\n-    var hour = + currenthour.getHours() + \":\" + currenthour.getMinutes() + \":\" + currenthour.getSeconds();\r\n+    const currentHour = new Date();\r\n+    const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n     return hour;\r\n }\r\n"
                },
                {
                    "date": 1711372456582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,4 +104,5 @@\n     const currentHour = new Date();\r\n     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n     return hour;\r\n }\r\n+\r\n"
                },
                {
                    "date": 1711372831308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         travel: id_travel,\r\n     };\r\n \r\n     try {\r\n-        const response = await fetch(`${apiUrl}/expenses`, {\r\n+        const response = await fetch(`${apiUrl}/api/`, {\r\n             method: 'POST',\r\n             headers: {\r\n                 'Content-Type': 'application/json'\r\n             },\r\n"
                },
                {
                    "date": 1711372839812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         travel: id_travel,\r\n     };\r\n \r\n     try {\r\n-        const response = await fetch(`${apiUrl}/api/`, {\r\n+        const response = await fetch(`${apiUrl}/api/travels`, {\r\n             method: 'POST',\r\n             headers: {\r\n                 'Content-Type': 'application/json'\r\n             },\r\n"
                },
                {
                    "date": 1711372844971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         travel: id_travel,\r\n     };\r\n \r\n     try {\r\n-        const response = await fetch(`${apiUrl}/api/travels`, {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${}`, {\r\n             method: 'POST',\r\n             headers: {\r\n                 'Content-Type': 'application/json'\r\n             },\r\n"
                },
                {
                    "date": 1711372851206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         travel: id_travel,\r\n     };\r\n \r\n     try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${}`, {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n             method: 'POST',\r\n             headers: {\r\n                 'Content-Type': 'application/json'\r\n             },\r\n"
                },
                {
                    "date": 1711372863360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n }\r\n \r\n export async function FindExpensesMethod(id_expenses) {\r\n     try {\r\n-        const response = await fetch(`${apiUrl}/expenses/${id_expenses}`);\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses);\r\n \r\n         if (!response.ok) {\r\n             throw new Error('Failed to find expenses.');\r\n         }\r\n"
                },
                {
                    "date": 1711372873274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n }\r\n \r\n export async function FindExpensesMethod(id_expenses) {\r\n     try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses);\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`);\r\n \r\n         if (!response.ok) {\r\n             throw new Error('Failed to find expenses.');\r\n         }\r\n"
                },
                {
                    "date": 1711372883125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n }\r\n \r\n export async function FindExpensesMethod(id_expenses) {\r\n     try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`);\r\n+        const response = await fetch(`${apiUrl}/expenses/${id_expenses}`);\r\n \r\n         if (!response.ok) {\r\n             throw new Error('Failed to find expenses.');\r\n         }\r\n"
                },
                {
                    "date": 1711372892768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         return false;\r\n     }\r\n }\r\n \r\n-export async function FindExpensesMethod(id_expenses) {\r\n+export async function FindExpensesMethod(id_travel , id_expenses) {\r\n     try {\r\n         const response = await fetch(`${apiUrl}/expenses/${id_expenses}`);\r\n \r\n         if (!response.ok) {\r\n"
                },
                {
                    "date": 1711372901303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n }\r\n \r\n export async function FindExpensesMethod(id_travel , id_expenses) {\r\n     try {\r\n-        const response = await fetch(`${apiUrl}/expenses/${id_expenses}`);\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/id`);\r\n \r\n         if (!response.ok) {\r\n             throw new Error('Failed to find expenses.');\r\n         }\r\n"
                },
                {
                    "date": 1711372913131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n }\r\n \r\n export async function FindExpensesMethod(id_travel , id_expenses) {\r\n     try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/id`);\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n \r\n         if (!response.ok) {\r\n             throw new Error('Failed to find expenses.');\r\n         }\r\n@@ -49,9 +49,9 @@\n }\r\n \r\n export async function RemoveExpensesMethod(id_expenses) {\r\n     try {\r\n-        const response = await fetch(`${apiUrl}/expenses/${id_expenses}`, {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n             method: 'DELETE'\r\n         });\r\n \r\n         if (!response.ok) {\r\n"
                },
                {
                    "date": 1711372954457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         return null;\r\n     }\r\n }\r\n \r\n-export async function RemoveExpensesMethod(id_expenses) {\r\n+export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n     try {\r\n         const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n             method: 'DELETE'\r\n         });\r\n@@ -74,9 +74,9 @@\n         id_travel\r\n     };\r\n \r\n     try {\r\n-        const response = await fetch(`${apiUrl}/expenses/${id_expenses}`, {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n             method: 'PUT',\r\n             headers: {\r\n                 'Content-Type': 'application/json'\r\n             },\r\n"
                },
                {
                    "date": 1711372974729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,8 @@\n     const newExpenses = {\r\n         description,\r\n         category,\r\n         value,\r\n-        invoice,\r\n         date: getDate(),\r\n         hour: getHour(),\r\n         location: 'My PC',\r\n         travel: id_travel,\r\n"
                },
                {
                    "date": 1711372994131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddExpensesMethod({ description, category, value, id_travel }) {\r\n+    const newExpenses = {\r\n+        description,\r\n+        category,\r\n+        value,\r\n+        date: getDate(),\r\n+        hour: getHour(),\r\n+        location: 'My PC',\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newExpenses)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add expenses.');\r\n+        }\r\n+\r\n+        console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', response.data);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function FindExpensesMethod(id_travel , id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to find expenses.');\r\n+        }\r\n+\r\n+        return await response.json();\r\n+    } catch (error) {\r\n+        console.error('Error finding expenses:', error.message);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove expenses.');\r\n+        }\r\n+\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error removing expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n+    const updatedExpenses = {\r\n+        description,\r\n+        category,\r\n+        value,\r\n+        invoice,\r\n+        id_travel\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(updatedExpenses)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update expenses.');\r\n+        }\r\n+\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error updating expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+function getDate() {\r\n+    const currentDate = new Date();\r\n+    const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n+    return datetime;\r\n+}\r\n+\r\n+function getHour() {\r\n+    const currentHour = new Date();\r\n+    const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n+    return hour;\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1711373006924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,8 @@\n     const newExpenses = {\r\n         description,\r\n         category,\r\n         value,\r\n-        date: getDate(),\r\n-        hour: getHour(),\r\n         location: 'My PC',\r\n     };\r\n \r\n     try {\r\n@@ -103,111 +101,4 @@\n     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n     return hour;\r\n }\r\n \r\n-const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddExpensesMethod({ description, category, value, invoice, id_travel }) {\r\n-    const newExpenses = {\r\n-        description,\r\n-        category,\r\n-        value,\r\n-        date: getDate(),\r\n-        hour: getHour(),\r\n-        location: 'My PC',\r\n-        travel: id_travel,\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n-            method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(newExpenses)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to add expenses.');\r\n-        }\r\n-\r\n-        console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', response.data);\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error adding expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function FindExpensesMethod(id_travel , id_expenses) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to find expenses.');\r\n-        }\r\n-\r\n-        return await response.json();\r\n-    } catch (error) {\r\n-        console.error('Error finding expenses:', error.message);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n-            method: 'DELETE'\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to remove expenses.');\r\n-        }\r\n-\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error removing expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n-    const updatedExpenses = {\r\n-        description,\r\n-        category,\r\n-        value,\r\n-        invoice,\r\n-        id_travel\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n-            method: 'PUT',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(updatedExpenses)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to update expenses.');\r\n-        }\r\n-\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error updating expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-function getDate() {\r\n-    const currentDate = new Date();\r\n-    const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n-    return datetime;\r\n-}\r\n-\r\n-function getHour() {\r\n-    const currentHour = new Date();\r\n-    const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n-    return hour;\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1711373015305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,16 +89,16 @@\n         return false;\r\n     }\r\n }\r\n \r\n-function getDate() {\r\n-    const currentDate = new Date();\r\n-    const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n-    return datetime;\r\n-}\r\n+// function getDate() {\r\n+//     const currentDate = new Date();\r\n+//     const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n+//     return datetime;\r\n+// }\r\n \r\n-function getHour() {\r\n-    const currentHour = new Date();\r\n-    const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n-    return hour;\r\n-}\r\n+// function getHour() {\r\n+//     const currentHour = new Date();\r\n+//     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n+//     return hour;\r\n+// }\r\n \r\n"
                },
                {
                    "date": 1711373037280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n     const newExpenses = {\r\n         description,\r\n         category,\r\n         value,\r\n-        location: 'My PC',\r\n+        location: 'MyPC',\r\n     };\r\n \r\n     try {\r\n         const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n"
                },
                {
                    "date": 1711373138000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,104 @@\n+const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddExpensesMethod({ description, category, value, id_travel }) {\r\n+    const newExpenses = {\r\n+        description,\r\n+        category,\r\n+        amout,\r\n+        location: 'MyPC',\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newExpenses)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add expenses.');\r\n+        }\r\n+\r\n+        console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', response.data);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function FindExpensesMethod(id_travel , id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to find expenses.');\r\n+        }\r\n+\r\n+        return await response.json();\r\n+    } catch (error) {\r\n+        console.error('Error finding expenses:', error.message);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove expenses.');\r\n+        }\r\n+\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error removing expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n+    const updatedExpenses = {\r\n+        description,\r\n+        category,\r\n+        value,\r\n+        invoice,\r\n+        id_travel\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(updatedExpenses)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update expenses.');\r\n+        }\r\n+\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error updating expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+// function getDate() {\r\n+//     const currentDate = new Date();\r\n+//     const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n+//     return datetime;\r\n+// }\r\n+\r\n+// function getHour() {\r\n+//     const currentHour = new Date();\r\n+//     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n+//     return hour;\r\n+// }\r\n+\r\n"
                },
                {
                    "date": 1711373143563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n export async function AddExpensesMethod({ description, category, value, id_travel }) {\r\n     const newExpenses = {\r\n         description,\r\n         category,\r\n-        amout,\r\n+        amount,\r\n         location: 'MyPC',\r\n     };\r\n \r\n     try {\r\n@@ -101,108 +101,4 @@\n //     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n //     return hour;\r\n // }\r\n \r\n-const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddExpensesMethod({ description, category, value, id_travel }) {\r\n-    const newExpenses = {\r\n-        description,\r\n-        category,\r\n-        value,\r\n-        location: 'MyPC',\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n-            method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(newExpenses)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to add expenses.');\r\n-        }\r\n-\r\n-        console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', response.data);\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error adding expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function FindExpensesMethod(id_travel , id_expenses) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to find expenses.');\r\n-        }\r\n-\r\n-        return await response.json();\r\n-    } catch (error) {\r\n-        console.error('Error finding expenses:', error.message);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n-            method: 'DELETE'\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to remove expenses.');\r\n-        }\r\n-\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error removing expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n-    const updatedExpenses = {\r\n-        description,\r\n-        category,\r\n-        value,\r\n-        invoice,\r\n-        id_travel\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n-            method: 'PUT',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(updatedExpenses)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to update expenses.');\r\n-        }\r\n-\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error updating expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-// function getDate() {\r\n-//     const currentDate = new Date();\r\n-//     const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n-//     return datetime;\r\n-// }\r\n-\r\n-// function getHour() {\r\n-//     const currentHour = new Date();\r\n-//     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n-//     return hour;\r\n-// }\r\n-\r\n"
                },
                {
                    "date": 1711373160572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n \r\n-export async function AddExpensesMethod({ description, category, value, id_travel }) {\r\n+export async function AddExpensesMethod({ description, category, amount, id_travel }) {\r\n     const newExpenses = {\r\n         description,\r\n         category,\r\n         amount,\r\n"
                },
                {
                    "date": 1711373203066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         if (!response.ok) {\r\n             throw new Error('Failed to add expenses.');\r\n         }\r\n \r\n-        console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', response.data);\r\n+        console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', response);\r\n         return true;\r\n     } catch (error) {\r\n         console.error('Error adding expenses:', error.message);\r\n         return false;\r\n"
                },
                {
                    "date": 1711373208655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         if (!response.ok) {\r\n             throw new Error('Failed to add expenses.');\r\n         }\r\n \r\n-        console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', response);\r\n+        console.log('DESPENSAS: ', response);\r\n         return true;\r\n     } catch (error) {\r\n         console.error('Error adding expenses:', error.message);\r\n         return false;\r\n"
                },
                {
                    "date": 1711373441244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,24 @@\n         return false;\r\n     }\r\n }\r\n \r\n+export async function ListExpensesMethod() {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/expenses`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to list expenses.');\r\n+        }\r\n+\r\n+        return await response.json();\r\n+    } catch (error) {\r\n+        console.error('Error listing expenses:', error.message);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+\r\n // function getDate() {\r\n //     const currentDate = new Date();\r\n //     const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n //     return datetime;\r\n"
                },
                {
                    "date": 1711373452603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n         if (!response.ok) {\r\n             throw new Error('Failed to add expenses.');\r\n         }\r\n \r\n-        console.log('DESPENSAS: ', response);\r\n+        console.log('add despesas: ', response);\r\n         return true;\r\n     } catch (error) {\r\n         console.error('Error adding expenses:', error.message);\r\n         return false;\r\n@@ -89,9 +89,9 @@\n         return false;\r\n     }\r\n }\r\n \r\n-export async function ListExpensesMethod() {\r\n+export async function ListExpensesMethod(id_travel) {\r\n     try {\r\n         const response = await fetch(`${apiUrl}/expenses`);\r\n \r\n         if (!response.ok) {\r\n"
                },
                {
                    "date": 1711373466361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n }\r\n \r\n export async function ListExpensesMethod(id_travel) {\r\n     try {\r\n-        const response = await fetch(`${apiUrl}/expenses`);\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n \r\n         if (!response.ok) {\r\n             throw new Error('Failed to list expenses.');\r\n         }\r\n"
                },
                {
                    "date": 1711373473233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,120 @@\n+const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddExpensesMethod({ description, category, amount, id_travel }) {\r\n+    const newExpenses = {\r\n+        description,\r\n+        category,\r\n+        amount,\r\n+        location: 'MyPC',\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newExpenses)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add expenses.');\r\n+        }\r\n+\r\n+        console.log('add despesas: ', response);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function FindExpensesMethod(id_travel , id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to find expenses.');\r\n+        }\r\n+\r\n+        return await response.json();\r\n+    } catch (error) {\r\n+        console.error('Error finding expenses:', error.message);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove expenses.');\r\n+        }\r\n+\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error removing expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n+    const updatedExpenses = {\r\n+        description,\r\n+        category,\r\n+        value,\r\n+        invoice,\r\n+        id_travel\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(updatedExpenses)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update expenses.');\r\n+        }\r\n+\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error updating expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function ListExpensesMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to list expenses.');\r\n+        }\r\n+\r\n+        return await response.json();\r\n+    } catch (error) {\r\n+        console.error('Error listing expenses:', error.message);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+\r\n+// function getDate() {\r\n+//     const currentDate = new Date();\r\n+//     const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n+//     return datetime;\r\n+// }\r\n+\r\n+// function getHour() {\r\n+//     const currentHour = new Date();\r\n+//     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n+//     return hour;\r\n+// }\r\n+\r\n"
                },
                {
                    "date": 1711374024196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,121 @@\n+const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddExpensesMethod({ description, category, amount, id_travel }) {\r\n+    const newExpenses = {\r\n+        description,\r\n+        category,\r\n+        amount,\r\n+        location: 'MyPC',\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newExpenses)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add expenses.');\r\n+        }\r\n+\r\n+        console.log('add despesas: ', response);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function FindExpensesMethod(id_travel , id_expenses) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to find expenses.');\r\n+        }\r\n+\r\n+        return await response.json();\r\n+    } catch (error) {\r\n+        console.error('Error finding expenses:', error.message);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n+    console.log()\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove expenses.');\r\n+        }\r\n+\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error removing expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n+    const updatedExpenses = {\r\n+        description,\r\n+        category,\r\n+        value,\r\n+        invoice,\r\n+        id_travel\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(updatedExpenses)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update expenses.');\r\n+        }\r\n+\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error updating expenses:', error.message);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function ListExpensesMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to list expenses.');\r\n+        }\r\n+\r\n+        return await response.json();\r\n+    } catch (error) {\r\n+        console.error('Error listing expenses:', error.message);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+\r\n+// function getDate() {\r\n+//     const currentDate = new Date();\r\n+//     const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n+//     return datetime;\r\n+// }\r\n+\r\n+// function getHour() {\r\n+//     const currentHour = new Date();\r\n+//     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n+//     return hour;\r\n+// }\r\n+\r\n"
                },
                {
                    "date": 1711374031586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     }\r\n }\r\n \r\n export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n-    console.log()\r\n+    console.log(id_travel++\"\")\r\n     try {\r\n         const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n             method: 'DELETE'\r\n         });\r\n@@ -118,244 +118,4 @@\n //     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n //     return hour;\r\n // }\r\n \r\n-const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddExpensesMethod({ description, category, amount, id_travel }) {\r\n-    const newExpenses = {\r\n-        description,\r\n-        category,\r\n-        amount,\r\n-        location: 'MyPC',\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n-            method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(newExpenses)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to add expenses.');\r\n-        }\r\n-\r\n-        console.log('add despesas: ', response);\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error adding expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function FindExpensesMethod(id_travel , id_expenses) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to find expenses.');\r\n-        }\r\n-\r\n-        return await response.json();\r\n-    } catch (error) {\r\n-        console.error('Error finding expenses:', error.message);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n-            method: 'DELETE'\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to remove expenses.');\r\n-        }\r\n-\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error removing expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n-    const updatedExpenses = {\r\n-        description,\r\n-        category,\r\n-        value,\r\n-        invoice,\r\n-        id_travel\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n-            method: 'PUT',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(updatedExpenses)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to update expenses.');\r\n-        }\r\n-\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error updating expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function ListExpensesMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to list expenses.');\r\n-        }\r\n-\r\n-        return await response.json();\r\n-    } catch (error) {\r\n-        console.error('Error listing expenses:', error.message);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-\r\n-// function getDate() {\r\n-//     const currentDate = new Date();\r\n-//     const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n-//     return datetime;\r\n-// }\r\n-\r\n-// function getHour() {\r\n-//     const currentHour = new Date();\r\n-//     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n-//     return hour;\r\n-// }\r\n-\r\n-const apiUrl = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddExpensesMethod({ description, category, amount, id_travel }) {\r\n-    const newExpenses = {\r\n-        description,\r\n-        category,\r\n-        amount,\r\n-        location: 'MyPC',\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses`, {\r\n-            method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(newExpenses)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to add expenses.');\r\n-        }\r\n-\r\n-        console.log('add despesas: ', response);\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error adding expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function FindExpensesMethod(id_travel , id_expenses) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to find expenses.');\r\n-        }\r\n-\r\n-        return await response.json();\r\n-    } catch (error) {\r\n-        console.error('Error finding expenses:', error.message);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n-            method: 'DELETE'\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to remove expenses.');\r\n-        }\r\n-\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error removing expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function UpdateExpenses({ id_expenses, description, category, value, invoice, id_travel }) {\r\n-    const updatedExpenses = {\r\n-        description,\r\n-        category,\r\n-        value,\r\n-        invoice,\r\n-        id_travel\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n-            method: 'PUT',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(updatedExpenses)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to update expenses.');\r\n-        }\r\n-\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error updating expenses:', error.message);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function ListExpensesMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to list expenses.');\r\n-        }\r\n-\r\n-        return await response.json();\r\n-    } catch (error) {\r\n-        console.error('Error listing expenses:', error.message);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-\r\n-// function getDate() {\r\n-//     const currentDate = new Date();\r\n-//     const datetime = currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1) + \"/\" + currentDate.getFullYear();\r\n-//     return datetime;\r\n-// }\r\n-\r\n-// function getHour() {\r\n-//     const currentHour = new Date();\r\n-//     const hour = currentHour.getHours() + \":\" + currentHour.getMinutes() + \":\" + currentHour.getSeconds();\r\n-//     return hour;\r\n-// }\r\n-\r\n"
                },
                {
                    "date": 1711374036876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     }\r\n }\r\n \r\n export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n-    console.log(id_travel++\"\")\r\n+    console.log(id_travel+\"\"+)\r\n     try {\r\n         const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n             method: 'DELETE'\r\n         });\r\n"
                },
                {
                    "date": 1711374042304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n     }\r\n }\r\n \r\n export async function RemoveExpensesMethod(id_travel , id_expenses) {\r\n-    console.log(id_travel+\"\"+)\r\n+    console.log(id_travel+\"__\"+id_expenses)\r\n     try {\r\n         const response = await fetch(`${apiUrl}/api/travels/${id_travel}/expenses/${id_expenses}`, {\r\n             method: 'DELETE'\r\n         });\r\n"
                }
            ],
            "date": 1711365837097,
            "name": "Commit-0",
            "content": "import travels from \"../TravelService\";\r\nconst url = process.env.EXPO_PUBLIC_API_URL;\r\n\r\n\r\nexport async function AddExpensesMethod({ description, category, value, invoice, id_travel }) {\r\n    const newExpenses = {\r\n        id: generateId(),\r\n        description,\r\n        category,\r\n        value,\r\n        invoice,\r\n        date: getdate(),\r\n        hour: getHour(),\r\n        location: 'My PC',\r\n        travel: id_travel,\r\n    }\r\n\r\n   \r\n\r\n\r\n    const foundTravel = travels.find(travel => travel.id === id_travel);\r\n    if (foundTravel) {\r\n        console.log(newExpenses)\r\n        foundTravel.expenses.push(newExpenses);\r\n    }\r\n\r\n    console.log('DADOS DA DESPESA ADICIONADAS AO ARRAY DE DESPENSAS: ', travels);\r\n    await new Promise(res => setTimeout(res, 1000));\r\n    return true;\r\n}\r\n\r\n\r\nexport async function FindExpensesMethod(id_expenses) {\r\n    await new Promise(res => setTimeout(res, 1000));\r\n    const foundExpenses = expenses.find(expenses => expenses.id === id_expenses);\r\n    return foundExpenses || null;\r\n}\r\n\r\n\r\n\r\nexport async function RemoveExpensesMethod(id_expenses, expenses) {\r\n    await new Promise(res => setTimeout(res, 1000));\r\n    const index = expenses.findIndex(expense => expense.id === id_expenses);\r\n    if(index !== -1){\r\n        expenses.splice(index, 1);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nexport async function UpdateExpenses({id_expenses , description , category , value, invoice, id_travel}) {\r\n    await new Promise(res => setTimeout(res, 1000));\r\n    if(\r\n        id_expenses.trim() === '' ||\r\n        description.trim() === '' ||\r\n        category.trim() === '' ||\r\n        value.trim() === '' ||\r\n        invoice.trim() === '' ||\r\n        id_travel.trim() === ''\r\n    ) {\r\n        return false;\r\n    }\r\n\r\n    const index = expenses.findIndex(expenses => expenses.id === id_expenses);\r\n    if(index !== -1){\r\n        expenses[index] = {\r\n            id: id_expenses,\r\n            description,\r\n            category,\r\n            value,\r\n            invoice,\r\n            id_travel\r\n        }\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n\r\n}\r\n\r\nfunction generateId() {\r\n    return '$' + Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\nfunction getdate() {\r\n    var currentdate = new Date();\r\n    var datetime = currentdate.getDay() + \"/\" + currentdate.getMonth() \r\n    + \"/\" + currentdate.getFullYear();\r\n    return datetime;\r\n}\r\n\r\nfunction getHour() {\r\n    var currenthour = new Date();\r\n    var hour = + currenthour.getHours() + \":\" + currenthour.getMinutes() + \":\" + currenthour.getSeconds();\r\n    return hour;\r\n}\r\n"
        }
    ]
}