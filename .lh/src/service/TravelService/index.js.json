{
    "sourceFile": "src/service/TravelService/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1711365821889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711365830866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n const travels = [];\r\n-const \r\n+const url = process.env.EXPO_PUBLIC_API_URL;\r\n \r\n export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n     const newTravel = {\r\n         id: generateId(),\r\n"
                },
                {
                    "date": 1711366040466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,154 @@\n+const travels = [];\r\n+const url = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n+    const newTravel = {\r\n+        id: generateId(),\r\n+        initDate,\r\n+        finalDate,\r\n+        origin,\r\n+        destination,\r\n+        description,\r\n+        expenses: []\r\n+        //Orçamento e Itinerario\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(url, {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newTravel)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add travel');\r\n+        }\r\n+\r\n+        travels.push(newTravel);\r\n+        console.log(travels);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function FindTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Travel not found');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        const { id, destination, description, initDate } = foundTravel;\r\n+        return { id, destination, description, initDate };\r\n+    } catch (error) {\r\n+        console.error('Error finding travel:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function ListTravelMethod() {\r\n+    try {\r\n+        const response = await fetch(url);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travels');\r\n+        }\r\n+\r\n+        const travelList = await response.json();\r\n+        return travelList;\r\n+    } catch (error) {\r\n+        console.error('Error listing travels:', error);\r\n+        return [];\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove travel');\r\n+        }\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels.splice(index, 1);\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error removing travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify({\r\n+                initDate,\r\n+                finalDate,\r\n+                origin,\r\n+                destination,\r\n+                description\r\n+            })\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update travel');\r\n+        }\r\n+\r\n+        const updatedTravel = {\r\n+            id: id_travel,\r\n+            initDate,\r\n+            finalDate,\r\n+            origin,\r\n+            destination,\r\n+            description\r\n+        };\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels[index] = updatedTravel;\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error updating travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function ListAllDescriptionMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}/description`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travel description');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        return foundTravel || null;\r\n+    } catch (error) {\r\n+        console.error('Error listing travel description:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+function generateId() {\r\n+    return '_' + Math.random().toString(36).substr(2, 9);\r\n+}\r\n+\r\n+export default travels;\r\n"
                },
                {
                    "date": 1711366053546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,15 @@\n const url = process.env.EXPO_PUBLIC_API_URL;\r\n \r\n export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n     const newTravel = {\r\n-        id: generateId(),\r\n         initDate,\r\n         finalDate,\r\n         origin,\r\n         destination,\r\n         description,\r\n         expenses: []\r\n-        //Orçamento e Itinerario\r\n+        // Orçamento e Itinerario\r\n     };\r\n \r\n     try {\r\n         const response = await fetch(url, {\r\n@@ -25,17 +24,19 @@\n         if (!response.ok) {\r\n             throw new Error('Failed to add travel');\r\n         }\r\n \r\n-        travels.push(newTravel);\r\n+        const addedTravel = await response.json();\r\n+        travels.push(addedTravel);\r\n         console.log(travels);\r\n         return true;\r\n     } catch (error) {\r\n         console.error('Error adding travel:', error);\r\n         return false;\r\n     }\r\n }\r\n \r\n+\r\n export async function FindTravelMethod(id_travel) {\r\n     try {\r\n         const response = await fetch(`${url}/${id_travel}`);\r\n \r\n@@ -151,96 +152,4 @@\n     return '_' + Math.random().toString(36).substr(2, 9);\r\n }\r\n \r\n export default travels;\r\n-const travels = [];\r\n-const url = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n-    const newTravel = {\r\n-        id: generateId(),\r\n-        initDate,\r\n-        finalDate,\r\n-        origin,\r\n-        destination,\r\n-        description,\r\n-        expenses: []\r\n-        \r\n-        //Orçamento e Itinerario\r\n-    };\r\n-    \r\n-    travels.push(newTravel);\r\n-    console.log(travels)\r\n-    await new Promise(res => setTimeout(res, 1000))\r\n-    return true;\r\n-}\r\n-\r\n-export async function FindTravelMethod(id_travel) {\r\n-    await new Promise(res => setTimeout(res, 1000));\r\n-    const foundTravel = travels.find(travel => travel.id === id_travel);\r\n-    if (foundTravel) {\r\n-        const { id, destination, description, initDate } = foundTravel;\r\n-        return { id, destination, description, initDate };\r\n-    }\r\n-    return null;\r\n-}\r\n-\r\n-\r\n-export async function ListTravelMethod() {\r\n-    await new Promise(res => setTimeout(res, 1000))\r\n-    return travels;\r\n-}\r\n-\r\n-export async function RemoveTravelMethod(id_travel) {\r\n-    console.log(id_travel)\r\n-    await new Promise(res => setTimeout(res, 1000))\r\n-    const index = travels.findIndex(travel => travel.id === id_travel);\r\n-    if (index !== -1) {\r\n-        travels.splice(index, 1);\r\n-        return true;\r\n-        \r\n-    }\r\n-    return false;\r\n-    \r\n-}\r\n-\r\n-export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n-    await new Promise(res => setTimeout(res, 1000))\r\n-    if (\r\n-        initDate.trim() === '' ||\r\n-        finalDate.trim() === '' ||\r\n-        origin.trim() === '' ||\r\n-        destination.trim() === '' ||\r\n-        description.trim() === ''\r\n-    ) {\r\n-        return false;\r\n-    }\r\n-    \r\n-    const index = travels.findIndex(travel => travel.id === id_travel);\r\n-    if (index !== -1) {\r\n-        travels[index] = {\r\n-            id: id_travel,\r\n-            initDate,\r\n-            finalDate,\r\n-            origin,\r\n-            destination,\r\n-            description\r\n-        };\r\n-        return true;\r\n-    }\r\n-    return false;\r\n-}\r\n-\r\n-export async function ListAllDescriptionMethod(id_travel) {\r\n-    console.log(\"olha o macaco \" + id_travel)\r\n-    await new Promise(res => setTimeout(res, 1000));\r\n-    const foundTravel = travels.find(travel => travel.id === id_travel);\r\n-    return  foundTravel || null;\r\n-}\r\n-\r\n-function generateId() {\r\n-    return '_' + Math.random().toString(36).substr(2, 9);\r\n-}\r\n-\r\n-\r\n-\r\n-export default travels;\r\n"
                },
                {
                    "date": 1711366374662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         // Orçamento e Itinerario\r\n     };\r\n \r\n     try {\r\n-        const response = await fetch(url, {\r\n+        const response = await fetch(url+\"\", {\r\n             method: 'POST',\r\n             headers: {\r\n                 'Content-Type': 'application/json'\r\n             },\r\n@@ -147,9 +147,5 @@\n         return null;\r\n     }\r\n }\r\n \r\n-function generateId() {\r\n-    return '_' + Math.random().toString(36).substr(2, 9);\r\n-}\r\n-\r\n export default travels;\r\n"
                },
                {
                    "date": 1711366380722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n         // Orçamento e Itinerario\r\n     };\r\n \r\n     try {\r\n-        const response = await fetch(url+\"\", {\r\n+        const response = await fetch(url+\"/api/travels\", {\r\n             method: 'POST',\r\n             headers: {\r\n                 'Content-Type': 'application/json'\r\n             },\r\n"
                },
                {
                    "date": 1711366393502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+const travels = [];\r\n+const url = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n+    const newTravel = {\r\n+        initDate,\r\n+        finalDate,\r\n+        origin,\r\n+        destination,\r\n+        description,\r\n+        expenses: []\r\n+        // Orçamento e Itinerario\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(url+\"/api/travels\", {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newTravel)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add travel');\r\n+        }\r\n+\r\n+        const addedTravel = await response.json();\r\n+        travels.push(addedTravel);\r\n+        console.log(travels);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+\r\n+export async function FindTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Travel not found');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        const { id, destination, description, initDate } = foundTravel;\r\n+        return { id, destination, description, initDate };\r\n+    } catch (error) {\r\n+        console.error('Error finding travel:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function ListTravelMethod() {\r\n+    try {\r\n+        const response = await fetch(url);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travels');\r\n+        }\r\n+\r\n+        const travelList = await response.json();\r\n+        return travelList;\r\n+    } catch (error) {\r\n+        console.error('Error listing travels:', error);\r\n+        return [];\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove travel');\r\n+        }\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels.splice(index, 1);\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error removing travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify({\r\n+                initDate,\r\n+                finalDate,\r\n+                origin,\r\n+                destination,\r\n+                description\r\n+            })\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update travel');\r\n+        }\r\n+\r\n+        const updatedTravel = {\r\n+            id: id_travel,\r\n+            initDate,\r\n+            finalDate,\r\n+            origin,\r\n+            destination,\r\n+            description\r\n+        };\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels[index] = updatedTravel;\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error updating travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function ListAllDescriptionMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}/description`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travel description');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        return foundTravel || null;\r\n+    } catch (error) {\r\n+        console.error('Error listing travel description:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export default travels;\r\n"
                },
                {
                    "date": 1711366426662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+const travels = [];\r\n+const url = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n+    const newTravel = {\r\n+        initDate,\r\n+        finalDate,\r\n+        origin,\r\n+        destination,\r\n+        description,\r\n+        expenses: []\r\n+        // Orçamento e Itinerario\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(url+\"/api/travels\", {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newTravel)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add travel');\r\n+        }\r\n+\r\n+        const addedTravel = await response.json();\r\n+        travels.push(addedTravel);\r\n+        console.log(travels);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+\r\n+export async function FindTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Travel not found');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        const { id, destination, description, initDate } = foundTravel;\r\n+        return { id, destination, description, initDate };\r\n+    } catch (error) {\r\n+        console.error('Error finding travel:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function ListTravelMethod() {\r\n+    try {\r\n+        const response = await fetch(url);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travels');\r\n+        }\r\n+\r\n+        const travelList = await response.json();\r\n+        return travelList;\r\n+    } catch (error) {\r\n+        console.error('Error listing travels:', error);\r\n+        return [];\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove travel');\r\n+        }\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels.splice(index, 1);\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error removing travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify({\r\n+                initDate,\r\n+                finalDate,\r\n+                origin,\r\n+                destination,\r\n+                description\r\n+            })\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update travel');\r\n+        }\r\n+\r\n+        const updatedTravel = {\r\n+            id: id_travel,\r\n+            initDate,\r\n+            finalDate,\r\n+            origin,\r\n+            destination,\r\n+            description\r\n+        };\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels[index] = updatedTravel;\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error updating travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function ListAllDescriptionMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}/description`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travel description');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        return foundTravel || null;\r\n+    } catch (error) {\r\n+        console.error('Error listing travel description:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export default travels;\r\n"
                },
                {
                    "date": 1711366438722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+const travels = [];\r\n+const url = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n+    const newTravel = {\r\n+        initDate,\r\n+        finalDate,\r\n+        origin,\r\n+        destination,\r\n+        description,\r\n+        expenses: []\r\n+        // Orçamento e Itinerario\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(url+\"/api/travels\", {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newTravel)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add travel');\r\n+        }\r\n+\r\n+        const addedTravel = await response.json();\r\n+        travels.push(addedTravel);\r\n+        console.log(travels);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+\r\n+export async function FindTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Travel not found');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        const { id, destination, description, initDate } = foundTravel;\r\n+        return { id, destination, description, initDate };\r\n+    } catch (error) {\r\n+        console.error('Error finding travel:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function ListTravelMethod() {\r\n+    try {\r\n+        const response = await fetch(url);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travels');\r\n+        }\r\n+\r\n+        const travelList = await response.json();\r\n+        return travelList;\r\n+    } catch (error) {\r\n+        console.error('Error listing travels:', error);\r\n+        return [];\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove travel');\r\n+        }\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels.splice(index, 1);\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error removing travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify({\r\n+                initDate,\r\n+                finalDate,\r\n+                origin,\r\n+                destination,\r\n+                description\r\n+            })\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update travel');\r\n+        }\r\n+\r\n+        const updatedTravel = {\r\n+            id: id_travel,\r\n+            initDate,\r\n+            finalDate,\r\n+            origin,\r\n+            destination,\r\n+            description\r\n+        };\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels[index] = updatedTravel;\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error updating travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function ListAllDescriptionMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}/description`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travel description');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        return foundTravel || null;\r\n+    } catch (error) {\r\n+        console.error('Error listing travel description:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export default travels;\r\n"
                },
                {
                    "date": 1711366459232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+const travels = [];\r\n+const url = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n+    const newTravel = {\r\n+        initDate,\r\n+        finalDate,\r\n+        origin,\r\n+        destination,\r\n+        description,\r\n+        expenses: [],\r\n+        \r\n+        // Orçamento e Itinerario\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(url+\"/api/travels\", {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newTravel)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add travel');\r\n+        }\r\n+\r\n+        const addedTravel = await response.json();\r\n+        travels.push(addedTravel);\r\n+        console.log(travels);\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+\r\n+export async function FindTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Travel not found');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        const { id, destination, description, initDate } = foundTravel;\r\n+        return { id, destination, description, initDate };\r\n+    } catch (error) {\r\n+        console.error('Error finding travel:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function ListTravelMethod() {\r\n+    try {\r\n+        const response = await fetch(url);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travels');\r\n+        }\r\n+\r\n+        const travelList = await response.json();\r\n+        return travelList;\r\n+    } catch (error) {\r\n+        console.error('Error listing travels:', error);\r\n+        return [];\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove travel');\r\n+        }\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels.splice(index, 1);\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error removing travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify({\r\n+                initDate,\r\n+                finalDate,\r\n+                origin,\r\n+                destination,\r\n+                description\r\n+            })\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update travel');\r\n+        }\r\n+\r\n+        const updatedTravel = {\r\n+            id: id_travel,\r\n+            initDate,\r\n+            finalDate,\r\n+            origin,\r\n+            destination,\r\n+            description\r\n+        };\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels[index] = updatedTravel;\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error updating travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function ListAllDescriptionMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}/description`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travel description');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        return foundTravel || null;\r\n+    } catch (error) {\r\n+        console.error('Error listing travel description:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export default travels;\r\n"
                },
                {
                    "date": 1711366464363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n         origin,\r\n         destination,\r\n         description,\r\n         expenses: [],\r\n-        \r\n+        itiner\r\n         // Orçamento e Itinerario\r\n     };\r\n \r\n     try {\r\n@@ -149,608 +149,4 @@\n     }\r\n }\r\n \r\n export default travels;\r\n-const travels = [];\r\n-const url = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n-    const newTravel = {\r\n-        initDate,\r\n-        finalDate,\r\n-        origin,\r\n-        destination,\r\n-        description,\r\n-        expenses: []\r\n-        // Orçamento e Itinerario\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(url+\"/api/travels\", {\r\n-            method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(newTravel)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to add travel');\r\n-        }\r\n-\r\n-        const addedTravel = await response.json();\r\n-        travels.push(addedTravel);\r\n-        console.log(travels);\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error adding travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-\r\n-export async function FindTravelMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Travel not found');\r\n-        }\r\n-\r\n-        const foundTravel = await response.json();\r\n-        const { id, destination, description, initDate } = foundTravel;\r\n-        return { id, destination, description, initDate };\r\n-    } catch (error) {\r\n-        console.error('Error finding travel:', error);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export async function ListTravelMethod() {\r\n-    try {\r\n-        const response = await fetch(url);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to fetch travels');\r\n-        }\r\n-\r\n-        const travelList = await response.json();\r\n-        return travelList;\r\n-    } catch (error) {\r\n-        console.error('Error listing travels:', error);\r\n-        return [];\r\n-    }\r\n-}\r\n-\r\n-export async function RemoveTravelMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`, {\r\n-            method: 'DELETE'\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to remove travel');\r\n-        }\r\n-\r\n-        const index = travels.findIndex(travel => travel.id === id_travel);\r\n-        if (index !== -1) {\r\n-            travels.splice(index, 1);\r\n-            return true;\r\n-        }\r\n-        return false;\r\n-    } catch (error) {\r\n-        console.error('Error removing travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`, {\r\n-            method: 'PUT',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify({\r\n-                initDate,\r\n-                finalDate,\r\n-                origin,\r\n-                destination,\r\n-                description\r\n-            })\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to update travel');\r\n-        }\r\n-\r\n-        const updatedTravel = {\r\n-            id: id_travel,\r\n-            initDate,\r\n-            finalDate,\r\n-            origin,\r\n-            destination,\r\n-            description\r\n-        };\r\n-\r\n-        const index = travels.findIndex(travel => travel.id === id_travel);\r\n-        if (index !== -1) {\r\n-            travels[index] = updatedTravel;\r\n-            return true;\r\n-        }\r\n-        return false;\r\n-    } catch (error) {\r\n-        console.error('Error updating travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function ListAllDescriptionMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}/description`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to fetch travel description');\r\n-        }\r\n-\r\n-        const foundTravel = await response.json();\r\n-        return foundTravel || null;\r\n-    } catch (error) {\r\n-        console.error('Error listing travel description:', error);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export default travels;\r\n-const travels = [];\r\n-const url = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n-    const newTravel = {\r\n-        initDate,\r\n-        finalDate,\r\n-        origin,\r\n-        destination,\r\n-        description,\r\n-        expenses: []\r\n-        // Orçamento e Itinerario\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(url+\"/api/travels\", {\r\n-            method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(newTravel)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to add travel');\r\n-        }\r\n-\r\n-        const addedTravel = await response.json();\r\n-        travels.push(addedTravel);\r\n-        console.log(travels);\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error adding travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-\r\n-export async function FindTravelMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Travel not found');\r\n-        }\r\n-\r\n-        const foundTravel = await response.json();\r\n-        const { id, destination, description, initDate } = foundTravel;\r\n-        return { id, destination, description, initDate };\r\n-    } catch (error) {\r\n-        console.error('Error finding travel:', error);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export async function ListTravelMethod() {\r\n-    try {\r\n-        const response = await fetch(url);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to fetch travels');\r\n-        }\r\n-\r\n-        const travelList = await response.json();\r\n-        return travelList;\r\n-    } catch (error) {\r\n-        console.error('Error listing travels:', error);\r\n-        return [];\r\n-    }\r\n-}\r\n-\r\n-export async function RemoveTravelMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`, {\r\n-            method: 'DELETE'\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to remove travel');\r\n-        }\r\n-\r\n-        const index = travels.findIndex(travel => travel.id === id_travel);\r\n-        if (index !== -1) {\r\n-            travels.splice(index, 1);\r\n-            return true;\r\n-        }\r\n-        return false;\r\n-    } catch (error) {\r\n-        console.error('Error removing travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`, {\r\n-            method: 'PUT',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify({\r\n-                initDate,\r\n-                finalDate,\r\n-                origin,\r\n-                destination,\r\n-                description\r\n-            })\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to update travel');\r\n-        }\r\n-\r\n-        const updatedTravel = {\r\n-            id: id_travel,\r\n-            initDate,\r\n-            finalDate,\r\n-            origin,\r\n-            destination,\r\n-            description\r\n-        };\r\n-\r\n-        const index = travels.findIndex(travel => travel.id === id_travel);\r\n-        if (index !== -1) {\r\n-            travels[index] = updatedTravel;\r\n-            return true;\r\n-        }\r\n-        return false;\r\n-    } catch (error) {\r\n-        console.error('Error updating travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function ListAllDescriptionMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}/description`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to fetch travel description');\r\n-        }\r\n-\r\n-        const foundTravel = await response.json();\r\n-        return foundTravel || null;\r\n-    } catch (error) {\r\n-        console.error('Error listing travel description:', error);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export default travels;\r\n-const travels = [];\r\n-const url = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n-    const newTravel = {\r\n-        initDate,\r\n-        finalDate,\r\n-        origin,\r\n-        destination,\r\n-        description,\r\n-        expenses: []\r\n-        // Orçamento e Itinerario\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(url+\"/api/travels\", {\r\n-            method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(newTravel)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to add travel');\r\n-        }\r\n-\r\n-        const addedTravel = await response.json();\r\n-        travels.push(addedTravel);\r\n-        console.log(travels);\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error adding travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-\r\n-export async function FindTravelMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Travel not found');\r\n-        }\r\n-\r\n-        const foundTravel = await response.json();\r\n-        const { id, destination, description, initDate } = foundTravel;\r\n-        return { id, destination, description, initDate };\r\n-    } catch (error) {\r\n-        console.error('Error finding travel:', error);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export async function ListTravelMethod() {\r\n-    try {\r\n-        const response = await fetch(url);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to fetch travels');\r\n-        }\r\n-\r\n-        const travelList = await response.json();\r\n-        return travelList;\r\n-    } catch (error) {\r\n-        console.error('Error listing travels:', error);\r\n-        return [];\r\n-    }\r\n-}\r\n-\r\n-export async function RemoveTravelMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`, {\r\n-            method: 'DELETE'\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to remove travel');\r\n-        }\r\n-\r\n-        const index = travels.findIndex(travel => travel.id === id_travel);\r\n-        if (index !== -1) {\r\n-            travels.splice(index, 1);\r\n-            return true;\r\n-        }\r\n-        return false;\r\n-    } catch (error) {\r\n-        console.error('Error removing travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`, {\r\n-            method: 'PUT',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify({\r\n-                initDate,\r\n-                finalDate,\r\n-                origin,\r\n-                destination,\r\n-                description\r\n-            })\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to update travel');\r\n-        }\r\n-\r\n-        const updatedTravel = {\r\n-            id: id_travel,\r\n-            initDate,\r\n-            finalDate,\r\n-            origin,\r\n-            destination,\r\n-            description\r\n-        };\r\n-\r\n-        const index = travels.findIndex(travel => travel.id === id_travel);\r\n-        if (index !== -1) {\r\n-            travels[index] = updatedTravel;\r\n-            return true;\r\n-        }\r\n-        return false;\r\n-    } catch (error) {\r\n-        console.error('Error updating travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function ListAllDescriptionMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}/description`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to fetch travel description');\r\n-        }\r\n-\r\n-        const foundTravel = await response.json();\r\n-        return foundTravel || null;\r\n-    } catch (error) {\r\n-        console.error('Error listing travel description:', error);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export default travels;\r\n-const travels = [];\r\n-const url = process.env.EXPO_PUBLIC_API_URL;\r\n-\r\n-export async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n-    const newTravel = {\r\n-        initDate,\r\n-        finalDate,\r\n-        origin,\r\n-        destination,\r\n-        description,\r\n-        expenses: []\r\n-        // Orçamento e Itinerario\r\n-    };\r\n-\r\n-    try {\r\n-        const response = await fetch(url+\"/api/travels\", {\r\n-            method: 'POST',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify(newTravel)\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to add travel');\r\n-        }\r\n-\r\n-        const addedTravel = await response.json();\r\n-        travels.push(addedTravel);\r\n-        console.log(travels);\r\n-        return true;\r\n-    } catch (error) {\r\n-        console.error('Error adding travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-\r\n-export async function FindTravelMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Travel not found');\r\n-        }\r\n-\r\n-        const foundTravel = await response.json();\r\n-        const { id, destination, description, initDate } = foundTravel;\r\n-        return { id, destination, description, initDate };\r\n-    } catch (error) {\r\n-        console.error('Error finding travel:', error);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export async function ListTravelMethod() {\r\n-    try {\r\n-        const response = await fetch(url);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to fetch travels');\r\n-        }\r\n-\r\n-        const travelList = await response.json();\r\n-        return travelList;\r\n-    } catch (error) {\r\n-        console.error('Error listing travels:', error);\r\n-        return [];\r\n-    }\r\n-}\r\n-\r\n-export async function RemoveTravelMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`, {\r\n-            method: 'DELETE'\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to remove travel');\r\n-        }\r\n-\r\n-        const index = travels.findIndex(travel => travel.id === id_travel);\r\n-        if (index !== -1) {\r\n-            travels.splice(index, 1);\r\n-            return true;\r\n-        }\r\n-        return false;\r\n-    } catch (error) {\r\n-        console.error('Error removing travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}`, {\r\n-            method: 'PUT',\r\n-            headers: {\r\n-                'Content-Type': 'application/json'\r\n-            },\r\n-            body: JSON.stringify({\r\n-                initDate,\r\n-                finalDate,\r\n-                origin,\r\n-                destination,\r\n-                description\r\n-            })\r\n-        });\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to update travel');\r\n-        }\r\n-\r\n-        const updatedTravel = {\r\n-            id: id_travel,\r\n-            initDate,\r\n-            finalDate,\r\n-            origin,\r\n-            destination,\r\n-            description\r\n-        };\r\n-\r\n-        const index = travels.findIndex(travel => travel.id === id_travel);\r\n-        if (index !== -1) {\r\n-            travels[index] = updatedTravel;\r\n-            return true;\r\n-        }\r\n-        return false;\r\n-    } catch (error) {\r\n-        console.error('Error updating travel:', error);\r\n-        return false;\r\n-    }\r\n-}\r\n-\r\n-export async function ListAllDescriptionMethod(id_travel) {\r\n-    try {\r\n-        const response = await fetch(`${url}/${id_travel}/description`);\r\n-\r\n-        if (!response.ok) {\r\n-            throw new Error('Failed to fetch travel description');\r\n-        }\r\n-\r\n-        const foundTravel = await response.json();\r\n-        return foundTravel || null;\r\n-    } catch (error) {\r\n-        console.error('Error listing travel description:', error);\r\n-        return null;\r\n-    }\r\n-}\r\n-\r\n-export default travels;\r\n"
                },
                {
                    "date": 1711366469948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,11 @@\n         origin,\r\n         destination,\r\n         description,\r\n         expenses: [],\r\n-        itiner\r\n+        itinerary:[\r\n+            \r\n+        ]\r\n         // Orçamento e Itinerario\r\n     };\r\n \r\n     try {\r\n"
                },
                {
                    "date": 1711366475273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n         destination,\r\n         description,\r\n         expenses: [],\r\n         itinerary:[\r\n-            \r\n+            \"\"\r\n         ]\r\n         // Orçamento e Itinerario\r\n     };\r\n \r\n"
                },
                {
                    "date": 1711366486926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         expenses: [],\r\n         itinerary:[\r\n             \"São Carlos\",\r\n             \"Campinas\",\r\n-            \"S\"\r\n+            \"Sã\"\r\n         ]\r\n         // Orçamento e Itinerario\r\n     };\r\n \r\n"
                },
                {
                    "date": 1711368708029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,153 @@\n+const url = process.env.EXPO_PUBLIC_API_URL;\r\n+\r\n+export async function AddTravelMethod({ startDate, endDate, origin, destination, description }) {\r\n+    const newTravel = {\r\n+        startDate,\r\n+        endDate,\r\n+        origin,\r\n+        destination,\r\n+        description,\r\n+        expenses: [],\r\n+        itinerary:[\r\n+            \"São Carlos\",\r\n+            \"Campinas\",\r\n+            \"São Paulo\",\r\n+            \"Nova York\"\r\n+        ]\r\n+        // Orçamento e Itinerario\r\n+    };\r\n+\r\n+    try {\r\n+        const response = await fetch(url+\"/api/travels\", {\r\n+            method: 'POST',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify(newTravel)\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to add travel');\r\n+        }\r\n+        return true;\r\n+    } catch (error) {\r\n+        console.error('Error adding travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+\r\n+export async function FindTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Travel not found');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        const { id, destination, description, initDate } = foundTravel;\r\n+        return { id, destination, description, initDate };\r\n+    } catch (error) {\r\n+        console.error('Error finding travel:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export async function ListTravelMethod() {\r\n+    try {\r\n+        const response = await fetch(url+\"/api/travels\");\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travels');\r\n+        }\r\n+\r\n+        const travelList = await response.json();\r\n+        console.log(travelList);\r\n+        return travelList;\r\n+    } catch (error) {\r\n+        console.error('Error listing travels:', error);\r\n+        return [];\r\n+    }\r\n+}\r\n+\r\n+export async function RemoveTravelMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/api/travels/${id_travel}`, {\r\n+            method: 'DELETE'\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to remove travel');\r\n+        }\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels.splice(index, 1);\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error removing travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}`, {\r\n+            method: 'PUT',\r\n+            headers: {\r\n+                'Content-Type': 'application/json'\r\n+            },\r\n+            body: JSON.stringify({\r\n+                initDate,\r\n+                finalDate,\r\n+                origin,\r\n+                destination,\r\n+                description\r\n+            })\r\n+        });\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to update travel');\r\n+        }\r\n+\r\n+        const updatedTravel = {\r\n+            id: id_travel,\r\n+            initDate,\r\n+            finalDate,\r\n+            origin,\r\n+            destination,\r\n+            description\r\n+        };\r\n+\r\n+        const index = travels.findIndex(travel => travel.id === id_travel);\r\n+        if (index !== -1) {\r\n+            travels[index] = updatedTravel;\r\n+            return true;\r\n+        }\r\n+        return false;\r\n+    } catch (error) {\r\n+        console.error('Error updating travel:', error);\r\n+        return false;\r\n+    }\r\n+}\r\n+\r\n+export async function ListAllDescriptionMethod(id_travel) {\r\n+    try {\r\n+        const response = await fetch(`${url}/${id_travel}/description`);\r\n+\r\n+        if (!response.ok) {\r\n+            throw new Error('Failed to fetch travel description');\r\n+        }\r\n+\r\n+        const foundTravel = await response.json();\r\n+        return foundTravel || null;\r\n+    } catch (error) {\r\n+        console.error('Error listing travel description:', error);\r\n+        return null;\r\n+    }\r\n+}\r\n+\r\n+export default travels;\r\n"
                }
            ],
            "date": 1711365821889,
            "name": "Commit-0",
            "content": "const travels = [];\r\nconst \r\n\r\nexport async function AddTravelMethod({ initDate, finalDate, origin, destination, description }) {\r\n    const newTravel = {\r\n        id: generateId(),\r\n        initDate,\r\n        finalDate,\r\n        origin,\r\n        destination,\r\n        description,\r\n        expenses: []\r\n        \r\n        //Orçamento e Itinerario\r\n    };\r\n    \r\n    travels.push(newTravel);\r\n    console.log(travels)\r\n    await new Promise(res => setTimeout(res, 1000))\r\n    return true;\r\n}\r\n\r\nexport async function FindTravelMethod(id_travel) {\r\n    await new Promise(res => setTimeout(res, 1000));\r\n    const foundTravel = travels.find(travel => travel.id === id_travel);\r\n    if (foundTravel) {\r\n        const { id, destination, description, initDate } = foundTravel;\r\n        return { id, destination, description, initDate };\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\nexport async function ListTravelMethod() {\r\n    await new Promise(res => setTimeout(res, 1000))\r\n    return travels;\r\n}\r\n\r\nexport async function RemoveTravelMethod(id_travel) {\r\n    console.log(id_travel)\r\n    await new Promise(res => setTimeout(res, 1000))\r\n    const index = travels.findIndex(travel => travel.id === id_travel);\r\n    if (index !== -1) {\r\n        travels.splice(index, 1);\r\n        return true;\r\n        \r\n    }\r\n    return false;\r\n    \r\n}\r\n\r\nexport async function UpdateTravel(id_travel, initDate, finalDate, origin, destination, description) {\r\n    await new Promise(res => setTimeout(res, 1000))\r\n    if (\r\n        initDate.trim() === '' ||\r\n        finalDate.trim() === '' ||\r\n        origin.trim() === '' ||\r\n        destination.trim() === '' ||\r\n        description.trim() === ''\r\n    ) {\r\n        return false;\r\n    }\r\n    \r\n    const index = travels.findIndex(travel => travel.id === id_travel);\r\n    if (index !== -1) {\r\n        travels[index] = {\r\n            id: id_travel,\r\n            initDate,\r\n            finalDate,\r\n            origin,\r\n            destination,\r\n            description\r\n        };\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function ListAllDescriptionMethod(id_travel) {\r\n    console.log(\"olha o macaco \" + id_travel)\r\n    await new Promise(res => setTimeout(res, 1000));\r\n    const foundTravel = travels.find(travel => travel.id === id_travel);\r\n    return  foundTravel || null;\r\n}\r\n\r\nfunction generateId() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\n\r\n\r\nexport default travels;\r\n"
        }
    ]
}